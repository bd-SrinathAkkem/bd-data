# ------------------------------------------------------------------------------
# Workflow: CI-Polaris
#
# This workflow performs Polaris SCA/SAST scans on source code.
#
# Usage:
#   - uses: <org>/<repo>/.github/workflows/polaris.yml@<ref>
#
# Required Secrets:
#   - POLARIS_ACCESS_TOKEN: Polaris API token
#   - GITHUB_TOKEN: Required if PR comments are enabled
# ------------------------------------------------------------------------------

name: CI-Polaris

on:
  workflow_call:
    inputs:
      polaris_server_url:
        description: 'Polaris server URL'
        required: true
        type: string

      polaris_application_name:
        description: 'Optional: Polaris application name'
        required: false
        type: string
        default: ''

      polaris_project_name:
        description: 'Optional: Polaris project name'
        required: false
        type: string
        default: ''

      polaris_branch_name:
        description: 'Optional: Polaris branch name'
        required: false
        type: string
        default: ''

      polaris_assessment_types:
        description: 'Optional: Assessment types (e.g., SCA,SAST)'
        required: false
        type: string
        default: 'SCA,SAST'

      polaris_prComment_enabled:
        description: 'Optional: Enable PR comments'
        required: false
        type: boolean
        default: true

      polaris_prComment_severities:
        description: 'Optional: PR Issue severity'
        required: false
        type: string
        default: 'Critical,High'

      include_diagnostics:
        description: 'Optional: Include diagnostics'
        required: false
        type: boolean
        default: false

    secrets:
      POLARIS_ACCESS_TOKEN:
        description: 'Polaris access token'
        required: true

jobs:
  polaris-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Polaris Full Scan
        id: polaris-full-scan
        if: ${{ github.event_name != 'pull_request' }}
        uses: blackduck-inc/black-duck-security-scan@v2
        with:
          polaris_server_url: ${{ inputs.polaris_server_url }}
          polaris_access_token: ${{ secrets.POLARIS_ACCESS_TOKEN }}
          polaris_assessment_types: ${{ inputs.polaris_assessment_types }}
          
          polaris_application_name: ${{ inputs.polaris_application_name || github.repository_owner }}
          polaris_project_name: ${{ inputs.polaris_project_name || github.event.repository.name }}
          polaris_branch_name: ${{ inputs.polaris_branch_name || github.head_ref || github.ref_name }}

          include_diagnostics: ${{ inputs.include_diagnostics }}

      - name: Polaris PR Scan
        id: polaris-pr-scan
        if: ${{ github.event_name == 'pull_request' }}
        uses: blackduck-inc/black-duck-security-scan@v2
        with:
          polaris_server_url: ${{ inputs.polaris_server_url }}
          polaris_access_token: ${{ secrets.POLARIS_ACCESS_TOKEN }}
          polaris_assessment_types: ${{ inputs.polaris_assessment_types }}
          
          polaris_application_name: ${{ inputs.polaris_application_name || github.repository_owner }}
          polaris_project_name: ${{ inputs.polaris_project_name || github.event.repository.name }}
          polaris_branch_name: ${{ inputs.polaris_branch_name || github.head_ref || github.ref_name }}

          polaris_prComment_enabled: ${{ inputs.polaris_prComment_enabled }}
          polaris_prComment_severities: ${{ inputs.polaris_prComment_severities }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          
          include_diagnostics: ${{ inputs.include_diagnostics }}

      - name: Output Scan Results
        if: always()
        run: |
          if [ "${{ github.event_name }}" != "pull_request" ]; then
            echo "Polaris Full Scan exit status - ${{ steps.polaris-full-scan.outputs.status }}"
          else
            echo "Polaris PR Scan exit status - ${{ steps.polaris-pr-scan.outputs.status }}"
          fi
  polaris-cli:
    runs-on: ubuntu-latest
    env:
      BRIDGE_POLARIS_SERVERURL: ${{ inputs.polaris_server_url }}
      BRIDGE_POLARIS_ACCESSTOKEN: ${{ secrets.POLARIS_ACCESS_TOKEN }}
      BRIDGE_POLARIS_ASSESSMENT_TYPES: ${{ inputs.polaris_assessment_types }}
      
      BRIDGE_POLARIS_APPLICATION_NAME: chuckaude-${{ github.event.repository.name }}
      BRIDGE_POLARIS_PROJECT_NAME: ${{ github.event.repository.name }}
      BRIDGE_POLARIS_BRANCH_NAME: ${{ github.event.ref_name }}
      
      BRIDGE_GITHUB_USER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      BRIDGE_GITHUB_REPOSITORY_OWNER_NAME: ${{ github.repository_owner }}
      BRIDGE_GITHUB_REPOSITORY_NAME: ${{ github.event.repository.name }}
      BRIDGE_GITHUB_REPOSITORY_BRANCH_NAME: ${{ github.ref_name }}
      # INCLUDE_DIAGNOSTICS: true
    steps:
    - name: Checkout Source
      uses: actions/checkout@v4
    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        java-version: 21
        distribution: temurin
        cache: maven
    - name: Polaris Full Scan
      if: ${{ github.event_name != 'pull_request' }}
      run: |
        curl -fLsS -o bridge.zip ${{ vars.BRIDGECLI_LINUX64 }} && unzip -qo -d ${{ runner.temp }} bridge.zip && rm -f bridge.zip
        ${{ runner.temp }}/bridge-cli-bundle-linux64/bridge-cli --stage polaris \
            polaris.reports.sarif.create=true
    - name: Polaris PR Scan
      if: ${{ github.event_name == 'pull_request' }}
      run: |
        curl -fLsS -o bridge.zip ${{ vars.BRIDGECLI_LINUX64 }} && unzip -qo -d ${{ runner.temp }} bridge.zip && rm -f bridge.zip
        ${{ runner.temp }}/bridge-cli-bundle-linux64/bridge-cli --stage polaris \
            polaris.prcomment.enabled=true \
            polaris.branch.parent.name=${{ github.event.base_ref }} \
            github.repository.pull.number=${{ github.event.number }}
#    - name: Save Logs
#      if: always()
#      uses: actions/upload-artifact@v4
#      with:
#        name: bridge-logs
#        path: ${{ github.workspace }}/.bridge
#        include-hidden-files: true
